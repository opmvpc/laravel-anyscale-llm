name: Laravel Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ["8.2", "8.3"]
        node-version: ["20"] # Choisissez la version de Node.js qui correspond Ã  votre projet

    steps:
      - uses: actions/checkout@v2

      - name: Cache Composer Dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Cache Node.js Dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite
          tools: composer:v2

      - name: Install PHP dependencies
        run: composer install --prefer-dist --no-progress

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install NPM dependencies
        run: npm ci

      - name: Compile assets
        run: npm run build

      - name: Setup Application
        run: |
          cp .env.example .env
          php artisan key:generate
          echo "DB_CONNECTION=sqlite" >> .env
          echo "DB_DATABASE=:memory:" >> .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          php artisan config:clear

      - name: Run Database Migrations
        run: php artisan migrate

      - name: Execute Tests
        run: vendor/bin/phpunit
